<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
    <!-- Unique identifier of the plugin. It should be FQN. It cannot be changed between the plugin versions. -->
    <id>com.cppcxy.Intellij-EmmyLuaForX7</id>

    <!-- Public plugin name should be written in Title Case.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-name -->
    <name>EmmyLuaForX7</name>

    <!-- A displayed Vendor name or Organization ID displayed on the Plugins Page. -->
    <vendor email="" url="">CppCXY</vendor>

    <!-- Description of the plugin displayed on the Plugin Page and IDE Plugin Manager.
         Simple HTML elements (text formatting, paragraphs, and lists) can be added inside of <![CDATA[ ]]> tag.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-description -->
    <description><![CDATA[
    Support for Lua programming language.<br>
    <h2>Features</h2>

    <ul>
    <li> EmmyLua with X7 Lua support. Modified by liulaoye</li>
    <li> All Lua versions support (<code>Lua 5.1</code>, <code>Lua 5.2</code>, <code>Lua 5.3</code>, <code>Lua 5.4</code>, <code>Luajit</code>)</li>
    <li> Support Enhance EmmyLua Doc</li>
    <li> Support Almost language IDE features Provider by <a href="https://github.com/CppCXY/EmmyLuaAnalyzer">EmmyLuaAnalyzer</a></li>
    <li> More better formatter base on <a href="https://github.com/CppCXY/EmmyLuaCodeStyle">EmmyLuaCodeStyle</a></li>
    <li> Powerful and more performant <a href="https://github.com/EmmyLua/EmmyLuaDebugger">EmmyLuaLua Debugger</li></li>

    </ul>
  ]]></description>
    <change-notes><![CDATA[
    Change Log.<br>
    <h1>0.8.1</h1>
    <h2>Fix</h2>
    <ul>
    <li> Lua诊断可能触发异常</li>
    </ul>
    <h1>0.8.0</h1>
    <h2>New</h2>
    <ul>
    <li> 新增EventBus接口对称调用的诊断</li>
    <li> 新增InputSystem接口对称调用的诊断</li>
    <li> 新增BuffId合法性诊断</li>
    <li> 新增Construct/Destruct父类调用诊断</li>
    </ul>
    <h2>Fix</h2>
    <ul>
    <li> Lua根目录是项目子目录时Debugger无法找到Lua文件</li>
    </ul>
  ]]>

    </change-notes>

    <!-- Product and plugin compatibility requirements.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html -->

    <depends>com.intellij.modules.platform</depends>
    <depends>com.redhat.devtools.lsp4ij</depends>
    <idea-version since-build="232"/>
    <!-- Extension points defined by the plugin.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-extension-points.html -->
    <extensions defaultExtensionNs="com.intellij">
        <fileType name="lua"
                  implementationClass="com.tang.intellij.lua.lang.LuaFileType"
                  fieldName="INSTANCE"
                  extensions="lua"
                  language="Lua"/>

        <!--        folding-->
        <lang.foldingBuilder language="Lua" implementationClass="com.tang.intellij.lua.folding.LuaFoldingBuilder"/>
        <lang.foldingBuilder language="Lua"
                             implementationClass="com.tang.intellij.lua.folding.LuaRegionFoldingBuilder"/>

        <lang.parserDefinition language="Lua" implementationClass="com.tang.intellij.lua.lang.LuaParserDefinition"/>
        <lang.braceMatcher language="Lua" implementationClass="com.tang.intellij.lua.braces.LuaBraceMatcher"/>
        <lang.quoteHandler language="Lua"
                           implementationClass="com.tang.intellij.lua.codeInsight.editorActions.LuaQuoteHandler"/>
        <!--        <languageInjector implementation="com.tang.intellij.lua.lang.LuaLanguageInjector"/>-->

        <customPasteProvider
                implementation="com.tang.intellij.lua.codeInsight.editorActions.StringLiteralPasteProvider"/>

        <!--        highlight-->
        <lang.syntaxHighlighterFactory
                language="Lua"
                implementationClass="com.tang.intellij.lua.highlighting.LuaSyntaxHighlighterFactory"/>
        <!--        <highlightErrorFilter implementation="com.tang.intellij.lua.highlighting.LuaHighlightErrorFilter"/>-->
        <annotator language="Lua" implementationClass="com.tang.intellij.lua.annotator.LuaAnnotator"/>

        <highlightUsagesHandlerFactory
                implementation="com.tang.intellij.lua.codeInsight.highlighting.LuaHighlightUsagesHandlerFactory"/>

        <readWriteAccessDetector implementation="com.tang.intellij.lua.codeInsight.LuaReadWriteAccessDetector"/>

        <!--        debugger-->
        <programRunner implementation="com.tang.intellij.lua.debugger.emmy.EmmyDebuggerRunner"/>
        <configurationType implementation="com.tang.intellij.lua.debugger.emmy.EmmyDebugConfigurationType"/>
        <xdebugger.breakpointType implementation="com.tang.intellij.lua.debugger.LuaLineBreakpointType"/>
        <!-- file template provider -->
        <fileTemplateGroup implementation="com.tang.intellij.lua.actions.LuaFileTemplateProvider"/>
        <!--CreateFromTemplate-->
        <createFromTemplateHandler implementation="com.tang.intellij.lua.actions.LuaCreateFromTemplateHandler"/>
        <!-- for displaying the statusbar icon -->

        <!-- for settings-->
        <applicationService
                serviceImplementation="com.cppcxy.ide.setting.EmmyLuaSettings"/>
        <applicationConfigurable
                groupId="language"
                instance="com.cppcxy.ide.setting.EmmyLuaSettingsPanel"
                displayName="EmmyLua Settings"
                id="EmmyLua.Settings"
        >
        </applicationConfigurable>

        <statusBarWidgetFactory id="EmmyLuaAnalyzer"
                                implementation="com.cppcxy.ide.editor.statusbar.StatusBarWidgetFactory"/>
        <lang.commenter language="Lua" implementationClass="com.tang.intellij.lua.comment.LuaCommenter"/>
        <codeInsight.parameterInfo
                language="Lua"
                implementationClass="com.redhat.devtools.lsp4ij.features.signatureHelp.LSPParameterInfoHandler"/>
        <!-- LSP textDocument/documentSymbol -->
        <lang.psiStructureViewFactory
                language="EmmyLua"
                implementationClass="com.redhat.devtools.lsp4ij.features.documentSymbol.LSPDocumentSymbolStructureViewFactory"/>

    </extensions>

    <extensions defaultExtensionNs="com.redhat.devtools.lsp4ij">
        <server id="EmmyLua"
                name="EmmyLua"
                factoryClass="com.cppcxy.ide.lsp.EmmyLuaAnalyzerFactory">
            <description><![CDATA[
                <p>EmmyLua</p>
    ]]>
            </description>
        </server>
        <languageMapping language="Lua"
                         serverId="EmmyLua"/>
    </extensions>

    <actions>
        <action class="com.tang.intellij.lua.actions.CreateLuaFileAction"
                text="Lua File"
                id="lua.newFile">
            <add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewFromTemplate"/>
        </action>
    </actions>
</idea-plugin>